/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.Client;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pagh
 */
public class GUI extends javax.swing.JFrame implements Observer
{

    private Client client;

    /**
     * Creates new form GUI
     */
    public GUI()
    {
        initComponents();
        client = new Client();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        connectBtn = new javax.swing.JButton();
        msgField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTxtField = new javax.swing.JTextArea();
        cmdField = new javax.swing.JTextField();
        targetField = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();
        warningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connectBtn.setText("Connect");
        connectBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                connectBtnActionPerformed(evt);
            }
        });

        msgField.setText("MESSAGE HERE");
        msgField.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                msgFieldMouseClicked(evt);
            }
        });

        mainTxtField.setColumns(20);
        mainTxtField.setRows(5);
        jScrollPane1.setViewportView(mainTxtField);

        cmdField.setText("COMMAND");
        cmdField.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                cmdFieldMouseClicked(evt);
            }
        });

        targetField.setText("RECIPIENTS (write * to msg everyone)");
        targetField.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                targetFieldMouseClicked(evt);
            }
        });
        targetField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                targetFieldActionPerformed(evt);
            }
        });

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sendBtnActionPerformed(evt);
            }
        });

        warningLabel.setText("Hejsa og velkommen! Husk at hashtags er ligemeget");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(connectBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(warningLabel)
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sendBtn)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(targetField))
                                    .addComponent(msgField, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(129, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(warningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectBtn)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(targetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(msgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendBtn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_connectBtnActionPerformed
    {//GEN-HEADEREND:event_connectBtnActionPerformed
        try
        {
            client.connect("localhost", 4321);
            
        } catch (IOException ex)
        {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectBtnActionPerformed

    private void targetFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_targetFieldActionPerformed
    {//GEN-HEADEREND:event_targetFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_targetFieldActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sendBtnActionPerformed
    {//GEN-HEADEREND:event_sendBtnActionPerformed

        if (cmdField.getText().isEmpty() && targetField.getText().isEmpty() && msgField.getText().isEmpty())
        {
            warningLabel.setText("HUSK AT SKRIVE FÃ˜REND DU SENDER, BUBBER!");
        } else if ((cmdField.getText().equals("MSG")))
        {
            mainTxtField.append(client.getUserName() + " writes:  " + msgField.getText() + "\n");
            client.send(cmdField.getText().toUpperCase() + "#" + targetField.getText() + "#" + msgField.getText());
            msgField.setText("");
        } else if (cmdField.getText().equals("USER"))
        {
            client.setUserName(targetField.getText());
            client.registerObserver(this);
            client.send(cmdField.getText().toUpperCase() + "#" + targetField.getText());
            cmdField.setText("");
            targetField.setText("");
        } else if (cmdField.getText().equals("STOP"))
        {

            this.dispose();
            client.killMePls();
        }

    }//GEN-LAST:event_sendBtnActionPerformed

    private void cmdFieldMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmdFieldMouseClicked
    {//GEN-HEADEREND:event_cmdFieldMouseClicked
        cmdField.setText("");
    }//GEN-LAST:event_cmdFieldMouseClicked

    private void targetFieldMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_targetFieldMouseClicked
    {//GEN-HEADEREND:event_targetFieldMouseClicked
        targetField.setText("");
    }//GEN-LAST:event_targetFieldMouseClicked

    private void msgFieldMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_msgFieldMouseClicked
    {//GEN-HEADEREND:event_msgFieldMouseClicked
        msgField.setText("");
    }//GEN-LAST:event_msgFieldMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new GUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cmdField;
    private javax.swing.JButton connectBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mainTxtField;
    private javax.swing.JTextField msgField;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTextField targetField;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1)
    {
        String msg = (String) o1;
        mainTxtField.append(msg + "\n");
//        splitMessage(msg);
    }

//    public String splitMessage(String message)
//    {
//        String s = "";
//
//        if (message.startsWith("MSG#"))
//        {
//            String[] a = message.split("#", 3);
//            s = a[1] + ": " + a[2];
//            System.out.println(s);
//            mainTxtField.append(s + System.lineSeparator());
//        } else if (message.startsWith("USERLIST#"))
//        {
//            String[] b = message.split("#", 2); // Split into USERLIST# //AND// user1,user2,user3...
//            String[] b2 = b[1].split(","); // Split users by comma.
//
//            warningLabel.setText("abekat"); // Clear textArea for users so we can append.
////            for (int i = 0; i < b2.length; i++)
////            {
////                jTextAreaUsers.append(b2[i] + System.lineSeparator()); //Append all users in a seperate line.
////            }
//        }
//        
//        return s;
//    }
}
